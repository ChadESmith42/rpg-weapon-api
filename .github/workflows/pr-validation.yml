name: PR Validation

# Trigger on pull requests to any branch
on:
  pull_request:
    branches: [ '*' ]
  push:
    branches: [ development, main ]

# Set permissions for the workflow
permissions:
  contents: read
  pull-requests: write
  checks: write

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'
        include-prerelease: true

    - name: Restore dependencies
      run: dotnet restore WeaponApi.sln

    - name: Build solution
      run: |
        echo "🏗️ Building solution..."
        dotnet build WeaponApi.sln --configuration Release --no-restore
        if [ $? -eq 0 ]; then
          echo "✅ Build completed successfully"
        else
          echo "❌ Build failed"
          exit 1
        fi

    - name: Run tests
      run: |
        echo "🧪 Running tests..."
        dotnet test WeaponApi.sln \
          --configuration Release \
          --no-build \
          --verbosity normal \
          --logger "trx;LogFileName=test-results.trx" \
          --collect:"XPlat Code Coverage" \
          --results-directory ./TestResults/ \
          -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover
        if [ $? -eq 0 ]; then
          echo "✅ All tests passed"
        else
          echo "❌ Tests failed"
          exit 1
        fi
      env:
        ASPNETCORE_ENVIRONMENT: Testing

    - name: Success notification
      if: success()
      run: echo "🎉 Build and tests completed successfully! PR is ready for review."

    - name: Failure notification
      if: failure()
      run: |
        echo "🚫 Build or tests failed. Please fix the issues before merging."
        echo "Check the logs above for detailed error information."
        exit 1

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: TestResults/**/*
        retention-days: 30

    - name: Upload code coverage
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: code-coverage
        path: TestResults/**/coverage.opencover.xml
        retention-days: 30

    - name: Comment PR with test results
      uses: dorny/test-reporter@v1
      if: always() && github.event_name == 'pull_request'
      with:
        name: Test Results
        path: TestResults/**/*.trx
        reporter: dotnet-trx
        fail-on-error: true

  # Additional job for security scanning
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'
        include-prerelease: true

    - name: Restore dependencies
      run: dotnet restore WeaponApi.sln

    - name: Run security audit
      run: |
        echo "::group::Security audit"
        dotnet list package --vulnerable --include-transitive 2>&1 | tee security-audit.log
        if grep -q "has the following vulnerable packages" security-audit.log; then
          echo "::error::Vulnerable packages detected!"
          cat security-audit.log
          exit 1
        else
          echo "No vulnerable packages detected."
        fi
        echo "::endgroup::"

  # Code quality checks
  code-quality:
    name: Code Quality
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'
        include-prerelease: true

    - name: Install dotnet format
      run: dotnet tool install -g dotnet-format

    - name: Check code formatting
      run: |
        echo "::group::Code formatting check"
        dotnet format WeaponApi.sln --verify-no-changes --verbosity diagnostic
        echo "::endgroup::"

    - name: Restore and build for analysis
      run: |
        dotnet restore WeaponApi.sln
        dotnet build WeaponApi.sln --configuration Release --no-restore

# Summary job that requires all other jobs to pass
  pr-validation-summary:
    name: PR Validation Summary
    runs-on: ubuntu-latest
    needs: [build-and-test, security-scan, code-quality]
    if: always()

    steps:
    - name: Check all jobs status
      run: |
        echo "Build and Test: ${{ needs.build-and-test.result }}"
        echo "Security Scan: ${{ needs.security-scan.result }}"
        echo "Code Quality: ${{ needs.code-quality.result }}"

        if [[ "${{ needs.build-and-test.result }}" != "success" ]]; then
          echo "::error::Build and test job failed!"
          exit 1
        fi

        if [[ "${{ needs.security-scan.result }}" == "failure" ]]; then
          echo "::error::Security scan failed!"
          exit 1
        fi

        if [[ "${{ needs.code-quality.result }}" == "failure" ]]; then
          echo "::error::Code quality checks failed!"
          exit 1
        fi

        echo "✅ All validation checks passed!"

    - name: Post success comment
      if: success() && github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: '✅ **PR Validation Passed!** All build, test, security, and code quality checks completed successfully.'
          })
